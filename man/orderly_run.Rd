% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recipe_run.R
\name{orderly_run}
\alias{orderly_run}
\alias{orderly_data}
\title{Run a report}
\usage{
orderly_run(name, parameters = NULL, envir = NULL, root = NULL,
  locate = TRUE, echo = TRUE, id_file = NULL, fetch = FALSE,
  ref = NULL, message = NULL)

orderly_data(name, parameters = NULL, envir = NULL, root = NULL,
  locate = TRUE)
}
\arguments{
\item{name}{Name of the report to run (see
\code{\link{orderly_list}}).}

\item{parameters}{Parameters passed to the report. A named list of
parameters declared in the orderly.yml.}

\item{envir}{The parent of environment to evaluate the report in;
by default a new environment will be made with the global
environment as the parent.}

\item{root}{The path to an orderly root directoy, or \code{NULL}
(the default) to search for one from the current working
directory if \code{locate} is \code{TRUE}).}

\item{locate}{Logical, indicating if the configuration should be
searched for.  If \code{TRUE} and \code{config} is not given,
then orderly looks in the working directory and up through its
parents until it finds an \code{orderly_config.yml} file.}

\item{echo}{Print the result of running the R code to the console}

\item{id_file}{Write the identifier into a file}

\item{fetch}{Logical, indicating if git should be fetched before
checking out the reference \code{ref}.}

\item{ref}{A git reference to use for this run (see Details)}

\item{message}{An optional character string containing a message
explaining why the report was run}
}
\description{
Run a report.  The \code{orderly_data} function is for testing the
queries (and developing the report).
}
\details{
If \code{ref} is provided then before running a report orderly
will try to check out (as a detached \code{HEAD}) \code{ref},
interpreted as a git reference.  This can be a commit, tag, or a
branch name (including remote).  The working directory must be
clean according to \code{git status} and this \emph{will} require
some careful use of \code{.gitignore} to exclude \code{draft},
\code{archive}, \code{data} and \code{orderly.sqlite}.  The git
tree will revert back to the original branch at completion (or
failure to complete) the report.
}
\examples{
path <- orderly::orderly_example("demo")

# To run most reports, provide the report name (and the path if
# not running in the working directory, as is the case here):
id <- orderly::orderly_run("minimal", root = path)

# Every report gets a unique identifier, based on the time (it is
# ISO 8601 time with random hex appended to end)
id

# After being run, a report is a "draft" and will exist in the
# drafts directory:
orderly::orderly_list_drafts(root = path)

# Draft reports are always stored in the path
# <root>/draft/<name>/<id>, so we have
dir(file.path(path, "draft", "minimal", id))

# which contains the files when the report was run.

# If a report has parameters, then these must be passed in as a
# named list.
id <- orderly::orderly_run("other", list(nmin = 0.2), root = path)

# These parameters can be used in SQL queries or in the report
# code.
# The function orderly_data does all the preparation work that
# orderly_run does, but does not run the report; instead it
# returns the created environment with all the data and parameters
# set.
env <- orderly::orderly_data("other", list(nmin = 0.2), root = path)
ls(env)
env$nmin
env$extract
}
\seealso{
\code{\link{orderly_log}} for controlling display of log
  messages (not just R output)
}
