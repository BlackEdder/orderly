% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deduplicate.R
\name{orderly_deduplicate}
\alias{orderly_deduplicate}
\title{Deduplicate an orderly archive}
\usage{
orderly_deduplicate(root = NULL, locate = TRUE, dry_run = TRUE,
  quiet = FALSE)
}
\arguments{
\item{root}{The path to an orderly root directory, or \code{NULL}
(the default) to search for one from the current working
directory if \code{locate} is \code{TRUE}).}

\item{locate}{Logical, indicating if the configuration should be
searched for.  If \code{TRUE} and \code{config} is not given,
then orderly looks in the working directory and up through its
parents until it finds an \code{orderly_config.yml} file.}

\item{dry_run}{Logical, indicating if the deduplication}

\item{quiet}{Logical, indicating if the status should not be printed}
}
\value{
Invisibly, information about the duplication status of the
  archive before deduplication was run.
}
\description{
Deduplicate an orderly archive.  Deduplicating an orderly archive
will replace all files that have the same content with "hard
links".  This is reliable only on Unix-like systems.  If you use
this feature, it is \emph{very important} that you treat your
orderly archive as read-only (though you should be anyway) as
changing one copy of a linked file changes all the other instances
of it - the files are literally the same file.
}
\examples{

path <- orderly::orderly_example("demo")
id1 <- orderly::orderly_run("minimal", root = path)
id2 <- orderly::orderly_run("minimal", root = path)
orderly_commit(id1, root = path)
orderly_commit(id2, root = path)
tryCatch(
  orderly::orderly_deduplicate(path, dry_run = TRUE),
  error = function(e) NULL)
}
